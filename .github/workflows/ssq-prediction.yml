#name: SSQ LSTM Prediction

#on:
  schedule:
    # 周一、周三、周五北京时间6:00 (UTC+8, 所以UTC时间是22:00前一天)
    - cron: '0 22 * * 0,2,4'  # UTC时间周日、周二、周四22:00
  #workflow_dispatch:  # 允许手动触发

env:
  PYTHON_VERSION: '3.9'
  TZ: Asia/Shanghai

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 设置超时时间
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          pkg-config \
          python3-dev
        
    - name: Upgrade pip and install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --no-cache-dir -r requirements.txt
        
    - name: Verify installation
      run: |
        python -c "import tensorflow as tf; print('TensorFlow version:', tf.__version__)"
        python -c "import pandas as pd; print('Pandas version:', pd.__version__)"
        python -c "import numpy as np; print('NumPy version:', np.__version__)"
        
    - name: Create necessary directories
      run: |
        mkdir -p data models prediction_history
        chmod 755 data models prediction_history
        
    - name: Set up environment
      run: |
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        echo "TF_CPP_MIN_LOG_LEVEL=2" >> $GITHUB_ENV
        echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV
        
    - name: Run SSQ LSTM Prediction System
      env:
        WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}
        WXPUSHER_USER_UIDS: ${{ secrets.WXPUSHER_USER_UIDS }}
        WXPUSHER_TOPIC_IDS: ${{ secrets.WXPUSHER_TOPIC_IDS }}
      run: |
        echo "开始运行双色球LSTM预测系统..."
        echo "检查微信推送配置..."
        if [ -z "$WXPUSHER_APP_TOKEN" ]; then
          echo "::notice::使用默认微信推送Token（用户真实配置）"
        else
          echo "::notice::使用自定义WXPUSHER_APP_TOKEN配置"
        fi
        python -u ssq_automation.py
        
    - name: Check output files
      run: |
        echo "检查生成的文件..."
        ls -la data/ || echo "data/ 目录不存在或为空"
        ls -la models/ || echo "models/ 目录不存在或为空"
        ls -la prediction_history/ || echo "prediction_history/ 目录不存在或为空"
        
    - name: Clean up old files
      run: |
        echo "清理旧文件..."
        # 只保留最近10个预测报告
        if [ -d "prediction_history" ] && [ "$(ls -A prediction_history)" ]; then
          cd prediction_history
          ls -t *.csv 2>/dev/null | tail -n +11 | xargs -r rm -f
          cd ..
        fi
        
        # 清理训练图片
        rm -f training_history.png
        
    - name: Commit and push if changes
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # 检查是否有变更
        if git diff --quiet && git diff --staged --quiet; then
          echo "没有需要提交的变更"
        else
          echo "发现变更，开始提交..."
          git add -A
          git commit -m "🤖 自动更新双色球预测 $(date '+%Y-%m-%d %H:%M:%S CST')" || exit 0
          
          # 推送变更，如果失败则重试
          for i in {1..3}; do
            if git push; then
              echo "推送成功"
              break
            else
              echo "推送失败，重试 $i/3..."
              sleep 5
            fi
          done
        fi 
